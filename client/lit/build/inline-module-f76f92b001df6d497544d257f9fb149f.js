window.wsClient=new class{constructor({handleMessage:e}={}){this.foo="bar",this.ws=null,this.wsUrl="",this.history=[],this.heartbeat=null,this.joinedChannels=[],this.availableChannels=[],this.id=null,this.incomingMessage="",this.handleMessage=e||(()=>{}),this.connect=this.connect.bind(this),this.initialize=this.initialize.bind(this),this.onMessage=this.onMessage.bind(this),this.onOpen=this.onOpen.bind(this),this.getChannels=this.getChannels.bind(this),this.joinChannel=this.joinChannel.bind(this),this.broadcastMessage=this.broadcastMessage.bind(this),this.sendMessageToTargetChannel=this.sendMessageToTargetChannel.bind(this),this.sendMessageToTargetClient=this.sendMessageToTargetClient.bind(this),this.sendMessageToJoinedChannels=this.sendMessageToJoinedChannels.bind(this),this.initialize()}connect(e){e.length&&"undefined"!=typeof window&&(console.log("attempting to connect to",e),this.ws&&this.ws.OPEN&&this.ws.close(),this.ws=new WebSocket(e))}initialize(){if("undefined"==typeof window)return;const e=window.location.protocol.includes("https")?"wss":"ws",s=window.location.protocol.includes("https")?"":":3000",t=`${e}://${location.hostname}${s}?channels=welcome`;this.wsUrl=t,this.connect(t),this.ws.onmessage=this.onMessage,this.ws.onopen=this.onOpen}onOpen(){console.log("connection opened"),this.getChannels()}onMessage(e){const s=JSON.parse(e.data);switch(s.type){case"id":this.id=s.id;break;case"heartbeat":this.heartbeat=s.heartbeat;break;case"joinedChannels":this.joinedChannels=s.channels;break;case"availableChannels":this.availableChannels=s.channels;break;default:this.history.unshift(s)}this.incomingMessage=s,this.handleMessage(s)}getChannels(){this.ws?.send(JSON.stringify({type:"joinedChannels"})),this.ws?.send(JSON.stringify({type:"availableChannels"}))}joinChannel(e){e.preventDefault(),this.ws?.send(JSON.stringify({type:"joinChannel",channel:e.target.channel.value}))}broadcastMessage(e){this.ws?.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify({type:"broadcast",message:{...JSON.parse(e),timestamp:Date.now()}}))}sendMessageToTargetChannel(e,s){this.ws?.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify({...JSON.parse(e),timestamp:Date.now(),channel:s}))}sendMessageToTargetClient(e,s){console.log("sending to target id",e,s),this.ws?.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify({...JSON.parse(e),timestamp:Date.now(),targetId:s}))}sendMessageToJoinedChannels(e){this.ws?.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify({...JSON.parse(e),timestamp:Date.now()}))}get wsState(){if("undefined"==typeof window)return"uninitialized";switch(this.ws?.readyState){case WebSocket.CONNECTING:return"connecting";case WebSocket.OPEN:return"open";case WebSocket.CLOSING:return"closing";case WebSocket.CLOSED:return"closed";default:return"uninitialized"}}}({handleMessage:e=>{if("noteOut"===e.type){let[s,t]=e.data;t>0?playSynth(s,t):stopSynth(s)}}}),document.querySelector("ws-component").ws=window.wsClient;
