{"version":3,"sources":["webpack:///../node_modules/preact/hooks/src/index.js","webpack:///./components/wsMonitor.js","webpack:///./hooks/useWs.js","webpack:///./routes/midi/style.css","webpack:///./utils/midihandler.js","webpack:///./routes/midi/index.js","webpack:///./components/clients/midi/index.js"],"names":["d","t","u","n","__h","r","o","i","__H","__","length","push","__V","c","h","s","B","__c","__N","setState","f","filter","every","call","this","forEach","props","shouldComponentUpdate","e","componentWillUpdate","__e","p","__s","z","y","_","F","current","A","concat","T","q","context","sub","value","x","useDebugValue","V","__v","__m","b","shift","__P","k","w","j","clearTimeout","g","cancelAnimationFrame","setTimeout","requestAnimationFrame","some","__b","a","__r","v","diffed","l","m","unmount","WsMonitor","_ref","websocket","ws","wsUrl","setWsUrl","history","myChannels","availableChannels","id","wsState","joinChannel","getChannels","heartbeat","broadcastMessage","sendMessageToTargetClient","sendMessageToTargetChannel","sendMessageToJoinedChannels","_useState2","_slicedToArray","useState","message","setMessage","_useState4","targetChannel","setTargetChannel","_useState6","targetId","setTargetId","messageIsValidJSON","useMemo","JSON","parse","handleWsUrlChange","useCallback","preventDefault","target","className","onSubmit","type","name","placeholder","Fragment","stringify","onClick","map","_ref2","channel","members","key","join","_ref3","htmlFor","cols","rows","onInput","disabled","style","overflow","height","data","useWs","setWs","setHistory","_useState8","setHeartbeat","_useState10","setMyChannels","_useState12","setAvailableChannels","_useState14","setId","_useState16","incomingMessage","setIncomingMessage","onMessage","event","channels","_toConsumableArray","_x2","apply","arguments","useEffect","window","protocol","location","includes","port","url","hostname","console","log","close","wsConnection","WebSocket","onmessage","onopen","send","readyState","CONNECTING","OPEN","CLOSING","CLOSED","_objectSpread","timestamp","Date","now","MIDIHandler","synth","navigator","requestMIDIAccess","then","onMIDISuccess","bind","onMIDIFailure","_message$data","status","note","velocity","midiAccess","inputs","get","selectedDeviceId","access","_step","devices","values","selectElement","document","getElementById","_iterator","_createForOfIteratorHelper","done","device","optionElement","createElement","text","appendChild","err","addEventListener","onDeviceSelect","_step2","_iterator2","onmidimessage","onMIDIMessage","_this","_step3","_iterator3","_step4","_iterator4","voices","stop","selectedInput","_this2","shiftKey","code","toggleMIDIDeviceSelect","deviceSelectContainer","display","Synth","class","home","MidiClient","setMidiHandler","Monitor","for"],"mappings":"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","file":"route-midi.chunk.73796.js","sourcesContent":["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { useCallback, useMemo, useState } from 'preact/hooks';\n\nconst WsMonitor = ({ websocket }) => {\n  const {\n    ws,\n    wsUrl,\n    setWsUrl,\n    history,\n    myChannels,\n    availableChannels,\n    id,\n    wsState,\n    joinChannel,\n    getChannels,\n    heartbeat,\n    broadcastMessage,\n    sendMessageToTargetClient,\n    sendMessageToTargetChannel,\n    sendMessageToJoinedChannels,\n  } = websocket;\n\n  const [message, setMessage] = useState('');\n  const [targetChannel, setTargetChannel] = useState('');\n  const [targetId, setTargetId] = useState('');\n\n  const messageIsValidJSON = useMemo(() => {\n    try {\n      JSON.parse(message);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }, [message]);\n\n  const handleWsUrlChange = useCallback(\n    (e) => {\n      e.preventDefault();\n      setWsUrl(e.target.wsUrl.value);\n    },\n    [setWsUrl]\n  );\n\n  return (\n    <div className='flex flex-col gap-4'>\n      <div className='flex gap-8'>\n        {ws && wsUrl && (\n          <div>\n            {wsState} on: {wsUrl}\n          </div>\n        )}\n        <form onSubmit={handleWsUrlChange}>\n          <input type='text' name='wsUrl' placeholder={wsUrl} />\n          <button type='submit'>go</button>\n        </form>\n      </div>\n\n      {ws && (\n        <>\n          <div>\n            {id && <div>id: {id}</div>}\n            {heartbeat && <div>heartbeat: {JSON.stringify(heartbeat)}</div>}\n          </div>\n\n          <div>\n            <div className='flex flex-row gap-8'>\n              <button onClick={getChannels}>get channels</button>\n              <form onSubmit={joinChannel}>\n                <input type='text' name='channel' />\n                <button type='submit' className='ml-2'>\n                  join channel\n                </button>\n              </form>\n            </div>\n            <ul>\n              my channels:\n              {myChannels.map(({ channel, members }) => (\n                <li key={channel} className={'ml-2'}>\n                  {channel} | {members.length} members: {members.join(', ')}\n                </li>\n              ))}\n            </ul>\n            <ul>\n              all channels:\n              {availableChannels.map(({ channel, members }) => (\n                <li key={channel} className={'ml-2'}>\n                  {channel}{' '}\n                  {members.length\n                    ? `| ${members.length} members: ${members.join(', ')}`\n                    : '(no members)'}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div>\n            <div className='flex flex-col gap-1'>\n              <div>\n                <label htmlFor='message'>message</label>\n                <textarea\n                  cols={100}\n                  rows={1}\n                  name='message'\n                  placeholder={`{\"hello\": 1}`}\n                  value={message}\n                  onInput={(e) => setMessage(e.target.value)}\n                />\n              </div>\n              <div>\n                <label htmlFor='targetChannel'>target channel</label>\n                <input\n                  name='targetChannel'\n                  type='text'\n                  value={targetChannel}\n                  onInput={(e) => setTargetChannel(e.target.value)}\n                />\n              </div>\n              <div>\n                <label htmlFor='targetChannel'>target client</label>\n                <input\n                  name='targetId'\n                  type='text'\n                  value={targetId}\n                  onInput={(e) => setTargetId(e.target.value)}\n                />\n              </div>\n              <div>\n                <button\n                  disabled={!messageIsValidJSON}\n                  onClick={() => sendMessageToTargetClient(message, targetId)}>\n                  send to another client\n                </button>\n                <button\n                  disabled={!messageIsValidJSON}\n                  onClick={() =>\n                    sendMessageToTargetChannel(message, targetChannel)\n                  }>\n                  send to channel\n                </button>\n                <button\n                  disabled={!messageIsValidJSON}\n                  onClick={() => sendMessageToJoinedChannels(message)}>\n                  send to joined channel\n                </button>\n                <button\n                  disabled={!messageIsValidJSON}\n                  onClick={() => broadcastMessage(message)}>\n                  broadcast\n                </button>\n              </div>\n            </div>\n            {!messageIsValidJSON && message.length ? (\n              <div>Invalid JSON</div>\n            ) : (\n              <></>\n            )}\n          </div>\n\n          <div>incoming messages:</div>\n          <div style={{ overflow: 'scroll', height: '200px' }}>\n            {history.map((data) => (\n              <div key={data}>{JSON.stringify(data)}</div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default WsMonitor;\n","import { useCallback, useState, useEffect, useMemo } from 'preact/hooks';\n\nconst useWs = () => {\n  const [ws, setWs] = useState(null);\n  const [wsUrl, setWsUrl] = useState('');\n  const [history, setHistory] = useState([]);\n  const [heartbeat, setHeartbeat] = useState(null);\n  const [myChannels, setMyChannels] = useState([]);\n  const [availableChannels, setAvailableChannels] = useState([]);\n  const [id, setId] = useState(null);\n  const [incomingMessage, setIncomingMessage] = useState('');\n\n  const onMessage = useCallback(async (event) => {\n    const data = await JSON.parse(event.data);\n    switch (data.type) {\n      case 'id':\n        setId(data.id);\n        break;\n      case 'heartbeat':\n        setHeartbeat(data.heartbeat);\n        break;\n      case 'myChannels':\n        setMyChannels(data.channels);\n        break;\n      case 'availableChannels':\n        setAvailableChannels(data.channels);\n        break;\n      default:\n        setHistory((p) => [data, ...p]);\n        break;\n    }\n\n    setIncomingMessage(data);\n  }, []);\n\n  useEffect(() => {\n    if (!window) return;\n\n    const protocol = window.location.protocol.includes('https') ? 'wss' : 'ws';\n    const port = window.location.protocol.includes('https') ? '' : ':3000';\n    let url = `${protocol}://${location.hostname}${port}?channels=welcome`;\n\n    setWsUrl(url);\n  }, []);\n\n  useEffect(() => {\n    if (!wsUrl.length || typeof window === 'undefined') return;\n\n    console.log('attempting to connect to', wsUrl);\n\n    if (ws) ws.close();\n\n    const wsConnection = new WebSocket(wsUrl);\n    wsConnection.onmessage = onMessage;\n    wsConnection.onopen = () => {\n      console.log('hey were open');\n    };\n\n    setWs(wsConnection);\n  }, [onMessage, wsUrl]);\n\n  const getChannels = useCallback(() => {\n    ws?.send(JSON.stringify({ type: 'myChannels' }));\n    ws?.send(JSON.stringify({ type: 'availableChannels' }));\n  }, [ws]);\n\n  const wsState = useMemo(() => {\n    if (typeof window === 'undefined') return;\n\n    switch (ws?.readyState) {\n      case WebSocket.CONNECTING:\n        return 'connecting';\n      case WebSocket.OPEN:\n        return 'open';\n      case WebSocket.CLOSING:\n        return 'closing';\n      case WebSocket.CLOSED:\n        return 'closed';\n      default:\n        return 'uninitialized';\n    }\n  }, [ws?.readyState]);\n\n  useEffect(() => {\n    if (wsState === 'open') getChannels();\n  }, [getChannels, ws, wsState]);\n\n  const joinChannel = useCallback(\n    (e) => {\n      e.preventDefault();\n      ws?.send(\n        JSON.stringify({ type: 'joinChannel', channel: e.target.channel.value })\n      );\n    },\n    [ws]\n  );\n\n  const broadcastMessage = useCallback(\n    (message) =>\n      wsState === 'open' &&\n      ws?.send(\n        JSON.stringify({\n          type: 'broadcast',\n          message: { ...JSON.parse(message), timestamp: Date.now() },\n        })\n      ),\n    [ws, wsState]\n  );\n\n  const sendMessageToTargetChannel = useCallback(\n    (message, channel) => {\n      wsState === 'open' &&\n        ws?.send(\n          JSON.stringify({\n            ...JSON.parse(message),\n            timestamp: Date.now(),\n            channel,\n          })\n        );\n    },\n    [ws, wsState]\n  );\n\n  const sendMessageToTargetClient = useCallback(\n    (message, targetId) => {\n      console.log('sending to target id', message, targetId);\n      wsState === 'open' &&\n        ws?.send(\n          JSON.stringify({\n            ...JSON.parse(message),\n            timestamp: Date.now(),\n            targetId,\n          })\n        );\n    },\n    [ws, wsState]\n  );\n\n  const sendMessageToJoinedChannels = useCallback(\n    (message) => {\n      wsState === 'open' &&\n        ws?.send(\n          JSON.stringify({ ...JSON.parse(message), timestamp: Date.now() })\n        );\n    },\n    [ws, wsState]\n  );\n\n  return {\n    ws,\n    wsUrl,\n    setWsUrl,\n    history,\n    myChannels,\n    availableChannels,\n    id,\n    incomingMessage,\n    wsState,\n    joinChannel,\n    getChannels,\n    heartbeat,\n    broadcastMessage,\n    sendMessageToTargetClient,\n    sendMessageToTargetChannel,\n    sendMessageToJoinedChannels,\n  };\n};\n\nexport default useWs;\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__1n+Tk\",\"resource\":\"resource__Gnwfh\"};","export default class MIDIHandler {\n  constructor(synth) {\n    console.log('Midihandler constructor', navigator);\n    // Request access to Web MIDI API\n    navigator\n      .requestMIDIAccess()\n      .then(this.onMIDISuccess.bind(this), this.onMIDIFailure.bind(this));\n    this.synth = synth;\n  }\n\n  onMIDIMessage(message) {\n    // Extract MIDI data\n    const [status, note, velocity] = message.data;\n\n    // Check if the message is from the selected input device\n    const selectedInput = this.midiAccess.inputs.get(this.selectedDeviceId);\n    if (selectedInput === message.target) {\n      if (status === 144 && velocity > 0) {\n        // Note-on message\n        // this.synth.playSynth(note, velocity);\n        console.log('note on', note);\n      } else if (status === 128 || (status === 144 && velocity === 0)) {\n        // Note-off message\n        // this.stopSynth(note);\n        console.log('note on', note);\n      }\n    }\n  }\n\n  onMIDISuccess(access) {\n    this.midiAccess = access;\n\n    // Get the list of available MIDI devices\n    const devices = this.midiAccess.inputs.values();\n    const selectElement = document.getElementById('device-select');\n\n    // Populate the device select options\n    for (let device of devices) {\n      const optionElement = document.createElement('option');\n      optionElement.value = device.id;\n      optionElement.text = device.name;\n      selectElement.appendChild(optionElement);\n    }\n\n    // Add event listener for device selection\n    selectElement.addEventListener('change', this.onDeviceSelect);\n\n    // Listen for MIDI messages\n    for (let input of this.midiAccess.inputs.values()) {\n      input.onmidimessage = this.onMIDIMessage;\n    }\n  }\n\n  onMIDIFailure() {\n    console.log('Failed to access MIDI devices');\n  }\n\n  onDeviceSelect(event) {\n    this.selectedDeviceId = event.target.value;\n\n    // Close existing MIDI inputs\n    navigator.requestMIDIAccess().then((midiAccess) => {\n      for (let input of midiAccess.inputs.values()) {\n        input.onmidimessage = null;\n      }\n\n      // Stop all active voices\n      for (let voice of this.synth.voices) {\n        voice.stop();\n      }\n      this.synth.voices = []; // Clear the voices array\n\n      // Listen for MIDI messages on the selected input\n      const selectedInput = midiAccess.inputs.get(this.selectedDeviceId);\n      if (selectedInput) {\n        selectedInput.onmidimessage = this.onMIDIMessage;\n      }\n    });\n  }\n\n  setupKeyboardListener() {\n    // Keyboard event listener for Shift + Spacebar\n    document.addEventListener('keydown', (event) => {\n      if (event.shiftKey && event.code === 'Space') {\n        this.toggleMIDIDeviceSelect();\n      }\n    });\n  }\n\n  toggleMIDIDeviceSelect() {\n    const deviceSelectContainer = document.getElementById(\n      'device-select-container'\n    );\n\n    if (!deviceSelectContainer) return;\n\n    if (deviceSelectContainer.style.display === 'none') {\n      // Show MIDI device select container\n      deviceSelectContainer.style.display = 'block';\n    } else {\n      // Hide MIDI device select container\n      deviceSelectContainer.style.display = 'none';\n    }\n  }\n}\n","import style from './style.css';\nimport MidiClient from '../../components/clients/midi';\n\nconst Synth = () => {\n  return (\n    <div class={style.home}>\n      <MidiClient />\n    </div>\n  );\n};\n\nexport default Synth;\n","import { useState, useEffect } from 'preact/hooks';\n\nimport MIDIHandler from '../../../utils/midihandler';\nimport useWs from '../../../hooks/useWs';\nimport Monitor from '../../wsMonitor';\n\nconst MidiClient = () => {\n  const ws = useWs();\n\n  const [, setMidiHandler] = useState(null);\n\n  useEffect(() => {\n    if (!window || !navigator) return;\n    setMidiHandler(new MIDIHandler());\n  }, []);\n\n  return (\n    <div>\n      <Monitor websocket={ws} />\n      <div id='device-select-container' style='display: block;'>\n        <p>press shift+space to toggle controls</p>\n        <label for='device-select'>Select MIDI Device:</label>\n        <select id='device-select' />\n      </div>\n    </div>\n  );\n};\n\nexport default MidiClient;\n"],"sourceRoot":""}